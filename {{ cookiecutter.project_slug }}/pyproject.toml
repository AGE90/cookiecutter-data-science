[tool.poetry]
name = "{{ cookiecutter.module_name | lower | replace(' ', '-') }}"
version = "{{ cookiecutter.project_version }}"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "{{ cookiecutter.project_url }}"
repository = "{{ cookiecutter.project_url }}"
documentation = "{{ cookiecutter.project_url }}/docs"
# keywords = ["packaging", "poetry", "cookiecutter"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: {{ cookiecutter.license }}",
    "Operating System :: OS Independent",
]
packages = [
    { include = "{{ cookiecutter.module_name }}", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
requests = "^2.32"
pydantic = "^2.11"
pyprojroot = "^0.3"

[tool.poetry.group.dev.dependencies]
mypy = "^1.16"
ruff = "^0.11"
black = "^25.1"

[tool.poetry.group.notebook.dependencies]
ipykernel = "^6.29"
jupyterlab = "^4.4"

[tool.poetry.group.data-science.dependencies]
pandas = "^2.2"
openpyxl = "^3.1"
scikit-learn = "^1.6"

[tool.poetry.group.viz.dependencies]
seaborn = "^0.13"
missingno = "^0.5"

[tool.poetry.group.test.dependencies]
pytest = "^8.3"
pytest-cov = "^6.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
my-cli = "{{ cookiecutter.module_name }}.__main__:main"

# Configure pytest
[tool.pytest.ini_options]
addopts = "--cov=src"
testpaths = ["tests"]

# Configure mypy
[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
